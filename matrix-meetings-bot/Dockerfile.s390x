## Builder image
FROM --platform=linux/s390x ubuntu:22.04 AS node_modules

# prepare a custom build for the bot dependencies
RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update && apt-get install -y curl git rustc cargo vim python3
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

ENV NVM_DIR /root/.nvm
ENV NODE_VERSION 20.8.1

RUN source $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default
RUN source $NVM_DIR/nvm.sh \
    && npm install -g yarn

WORKDIR /src
COPY matrix-meetings-bot/s390x/build.sh ./build.sh
COPY matrix-meetings-bot/s390x/index.js.patch ./index.js.patch
RUN chmod +x ./build.sh
RUN /bin/bash -c './build.sh'

# we have everything prepared to build the bot
WORKDIR /src
COPY package.json yarn.lock ./
COPY matrix-meetings-bot/package.json ./matrix-meetings-bot/
COPY packages/calendar/package.json ./packages/calendar/package.json
COPY packages/calendar/lib ./packages/calendar/lib
RUN source $NVM_DIR/nvm.sh \
    && yarn install --production --frozen-lockfile --network-timeout 1000000

## Runner image
FROM --platform=linux/s390x node:20-bullseye
ENV NODE_ENV=production
WORKDIR /app
RUN set -x\
    && mkdir /app/storage \
    && chown -R 101:0 /app/storage \
    && chmod -R g+w /app/storage
USER 101
COPY --from=node_modules /src/node_modules/ ./node_modules
COPY --from=node_modules /src/packages/calendar/ ./packages/calendar/
COPY matrix-meetings-bot/conf ./conf
COPY matrix-meetings-bot/lib ./lib

CMD ["node", "/src/main.js"]
